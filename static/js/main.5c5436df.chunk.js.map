{"version":3,"sources":["Components/Cards/Cards.module.css","Components/Cards/Cards.jsx","Api/index.js","Components/CountryPicker/CountryPicker.jsx","Components/Charts/Charts.jsx","App.js","index.js","App.module.css","Components/CountryPicker/CountryPicker.module.css","Components/Charts/Charts.module.css","logo.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","Style","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","variant","gutterBottom","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","CountryPicker","handleCountryChange","useState","setCountries","useEffect","fetchAPI","FormControl","Styles","NativeSelect","defaultValue","onChange","e","target","i","key","Charts","setDailyData","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","borderColor","fill","App","state","setState","this","alt","logo","src","Logo","footer","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c5436df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2zoVD\",\"card\":\"Cards_card__1QDT5\",\"infected\":\"Cards_infected__2Hs4z\",\"recovered\":\"Cards_recovered__2Dtyc\",\"deaths\":\"Cards_deaths__2cHPF\"};","import React from 'react'\r\nimport {Card, CardContent, Typography, Grid} from  '@material-ui/core'\r\nimport Countup from 'react-countup'\r\nimport cx from 'classnames'\r\nimport Style from './Cards.module.css'\r\nconst Cards = ({data:{confirmed, recovered, deaths, lastUpdate}})=>{\r\n    if(!confirmed){\r\n        return 'Loading...'\r\n    }\r\n    return(\r\n        <div className= {Style.container}>\r\n            <Grid container spacing= {3} justify='center'>\r\n\r\n                <Grid item component= {Card} xs={12} md={3}className={cx(Style.card, Style.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"primary\" variant =\"h5\" gutterBottom>Infected</Typography>\r\n                        <Typography variant =\"h4\">\r\n                            <Countup  start= {0} end={confirmed.value} duration= {3} separator= \",\" />\r\n                        </Typography><br />\r\n                        <Typography color=\"primary\">Last Updated : {new Date(lastUpdate).toDateString()}</Typography><br />\r\n                        <Typography variant=\"h6\">Total Number Of Cases From Covid-19 </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component= {Card} xs={12} md={3}className={cx(Style.card, Style.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" variant =\"h5\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant =\"h4\">\r\n                        <Countup  start= {0} end={recovered.value} duration= {3} separator= \",\" />\r\n                        </Typography><br />\r\n                        <Typography color=\"textSecondary\">Last Updated : {new Date(lastUpdate).toDateString()}</Typography><br />\r\n                        <Typography variant=\"h6\">Total Number Of Recoveries From COVID-19 </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component= {Card} xs={12} md={3}className={cx(Style.card, Style.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"error\" variant =\"h5\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant =\"h4\">\r\n                        <Countup  start= {0} end={deaths.value} duration= {3} separator= \",\" /></Typography><br />\r\n                        <Typography color=\"error\">Last Updated : {new Date(lastUpdate).toDateString()}</Typography><br />\r\n                        <Typography variant=\"h6\">Total Number Of Deaths From COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\nexport default Cards","import axios from 'axios'\r\nconst url = ' https://covid19.mathdro.id/api'\r\nexport const fetchData = async (country) =>{\r\n    let changeableUrl = url;\r\n    if(country){\r\n        changeableUrl= `${url}/countries/${country}`\r\n    }\r\n    try{\r\n        const {data : {confirmed, recovered, deaths, lastUpdate}}= await axios.get( changeableUrl);\r\n        return  {confirmed, recovered, deaths, lastUpdate};\r\n    }\r\n    catch (error){\r\n\r\n    }\r\n}\r\n \r\nexport const fetchDailyData = async () =>{\r\n    try{\r\n        const {data} = await axios.get(`${url}/daily`)  \r\n        const modifiedData = data.map((dailyData)=>({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,  \r\n            date: dailyData.reportDate  \r\n        }));\r\n        return modifiedData;\r\n    }\r\n    \r\n    catch (error){\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () =>{\r\n    try{\r\n        const {data:{countries}}= await axios.get(`${url}/countries`);\r\n       return countries.map((country)=>country.name)\r\n    }\r\n    \r\n    catch (error){\r\n\r\n    }\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport {NativeSelect, FormControl} from '@material-ui/core'\r\nimport Styles from './CountryPicker.module.css'\r\nimport { fetchCountries } from '../../Api/index'\r\nconst CountryPicker = ({ handleCountryChange })=>{\r\n    const [countries, setCountries]= useState([]);\r\n    useEffect(()=>{\r\n        const fetchAPI = async ()=>{\r\n            setCountries(await fetchCountries());\r\n        };\r\n        fetchAPI();\r\n    },[]);\r\n    return(\r\n       <FormControl className={Styles.FormControl}>\r\n           <NativeSelect defaultValue=\"\" onChange= {(e)=>handleCountryChange(e.target.value)}>\r\n               <option value=\"\">Global</option>\r\n               {countries.map((country,i)=><option key={i} value={country}>{country}</option>)}\r\n           </NativeSelect>\r\n       </FormControl>\r\n    )\r\n}\r\nexport default CountryPicker","import React, {useState, useEffect} from 'react'\r\nimport {fetchDailyData} from '../../Api/index'\r\nimport {Line,Bar} from 'react-chartjs-2'\r\nimport Styles from './Charts.module.css'\r\nconst Charts = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n    const [dailyData, setDailyData] = useState({});\r\n  \r\n    useEffect(() => {\r\n      const fetchMyAPI = async () => {\r\n        const initialDailyData = await fetchDailyData();\r\n  \r\n        setDailyData(initialDailyData);\r\n      };\r\n  \r\n      fetchMyAPI();\r\n    }, []);\r\n  \r\n    const barChart = (\r\n      confirmed ? (\r\n        <Bar\r\n          data={{\r\n            labels: ['Infected', 'Recovered', 'Deaths'],\r\n            datasets: [\r\n              {\r\n                label: 'People',\r\n                backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                data: [confirmed.value, recovered.value, deaths.value],\r\n              },\r\n            ],\r\n          }}\r\n          options={{\r\n            legend: { display: false },\r\n            title: { display: true, text: `Current State In ${country}` },\r\n          }}\r\n        />\r\n      ) : null\r\n    );\r\n  \r\n    const lineChart = (\r\n      dailyData[0] ? (\r\n        <Line\r\n          data={{\r\n            labels: dailyData.map(({ date }) => date),\r\n            datasets: [{\r\n              data: dailyData.map((data) => data.confirmed),\r\n              label: 'Infected',\r\n              backgroundColor: 'rgba(0, 0, 255, 0.5)',\r\n              borderColor: '#3333ff',\r\n              fill: true,\r\n            }, {\r\n              data: dailyData.map((data) => data.deaths),\r\n              label: 'Death',\r\n              borderColor: 'red',\r\n              backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n              fill: true,\r\n            },\r\n            ],\r\n          }}\r\n        />\r\n      ) : null\r\n    );\r\n  \r\n    return (\r\n      <div className={Styles.container}>\r\n        {country ? barChart : lineChart}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default Charts;","import React, { Component } from 'react'\r\nimport Cards from './Components/Cards/Cards'\r\nimport CountryPicker from './Components/CountryPicker/CountryPicker'\r\nimport Charts from './Components/Charts/Charts'\r\nimport Style from './App.module.css'\r\nimport {fetchData} from './Api/index.js'\r\nimport Logo from './logo.png'\r\n\r\nclass App extends Component {\r\n    state = {\r\n        data: {},\r\n        country:'',\r\n    }\r\n    async componentDidMount(){\r\n        const data = await fetchData();\r\n        this.setState({data})\r\n    }\r\n    handleCountryChange= async (country)=>{\r\n        const data = await fetchData(country);\r\n        this.setState({data, country:country});\r\n\r\n   \r\n    }\r\n    render() {\r\n        const { data, country } = this.state;\r\n        return (\r\n            <div className={Style.container}>\r\n                <img alt =\"Covid_Logo\" className={Style.logo} src={Logo}/>\r\n                <Cards data ={data} />\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Charts data={data} country={country} /> \r\n                <div className={Style.footer}>\r\n                   <p>Made With<span> ❤ </span>In India | By Shivdhan Chauhan</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__RvgV5\",\"logo\":\"App_logo__3cdHp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__33tWH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__2I0cf\"};","module.exports = __webpack_public_path__ + \"static/media/logo.32f944ee.png\";"],"sourceRoot":""}